replicaCount: 1
consulAgent:
  #join: consul-server.consul
  #
  # If your consul server uses encrypted gossip, specify the secret
  # name here.  Format should match the stable/consul chart.
  # gossipKeySecretName: gossip-key
  #
  # Optionally override the agent's http port
  HttpPort: 8500

service:
  name: vault
  type: LoadBalancer

ingress:
  enabled: false
  labels: {}
  # Used to create Ingress record (should used with service.type: ClusterIP).
  # hosts:
  #  - chart-example.local
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: "true"
  # tls:
  #   Secrets must be manually created in the namespace.
  #   - secretName: chart-example-tls
  #     hosts:
  #       - chart-example.local

## Sample for unsealing vault on startup
## if automation saves your unseal keys to a k8s secret on deploy
## writing a script to do this would be trivial and solves the
## issues of scaling up if deployed in HA.
# lifecycle: |
#   postStart:
#     exec:
#       command: ["./unseal -s my-unseal-keys"]

vault:
  # Only used to enable dev mode. When in dev mode, the rest of this config
  # section below is not used to configure Vault. See
  # https://www.vaultproject.io/intro/getting-started/dev-server.html for more
  # information.
  dev: false
  # Allows the mounting of various custom secrets th enable production vault
  # configurations. The comments show an example usage for mounting a TLS
  # secret. The two fields required are a secretName indicating the name of
  # the Kubernetes secret (created outside of this chart), and the mountPath
  # at which it should be mounted in the Vault container.
  logLevel: "debug"

  liveness:
    aliveIfUninitialized: true
    initialDelaySeconds: 30
    periodSeconds: 10
  readiness:
    readyIfSealed: true
    readyIfStandby: true
    readyIfUninitialized: true
    initialDelaySeconds: 10
    periodSeconds: 10

  customSecrets:
    #- secretName: vault-tls
    #  mountPath: /vault/tls
    - secretName: vault-server-tls
      mountPath: /vault/tls
  
  # Configure additional environment variables for the Vault containers
  #extraEnv: #{}
  #   - name: VAULT_API_ADDR
  #     value: "https://172.17.8.152:8200"
  #   - name: VAULT_CLUSTER_ADDR
  #     value: "https://172.17.8.152:8201"

  ## Use an existing config in a named ConfigMap
  # existingConfigName: vault-cm
  config:
    ui: true
    # A YAML representation of a final vault config.json file.
    # See https://www.vaultproject.io/docs/configuration/ for more information.
    api_addr: "https://172.17.8.152:8200"
    listener:
        tcp:
          #address: '[::]:8200'
          #cluster_address: '[::]:8201'
          tls_disable: false
          tls_cert_file: /vault/tls/tls.crt
          tls_key_file: /vault/tls/tls.key
      # See https://www.vaultproject.io/docs/configuration/storage/ for storage backends
    storage:
      consul:
        address: "consul-server.consul:8500"
        path: "vault"
